# Stubs for numpy.core.umath (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any

ERR_CALL = ... # type: int
ERR_DEFAULT = ... # type: int
ERR_IGNORE = ... # type: int
ERR_LOG = ... # type: int
ERR_PRINT = ... # type: int
ERR_RAISE = ... # type: int
ERR_WARN = ... # type: int
FLOATING_POINT_SUPPORT = ... # type: int
FPE_DIVIDEBYZERO = ... # type: int
FPE_INVALID = ... # type: int
FPE_OVERFLOW = ... # type: int
FPE_UNDERFLOW = ... # type: int
NAN = ... # type: float
NINF = ... # type: float
NZERO = ... # type: float
PINF = ... # type: float
PZERO = ... # type: float
SHIFT_DIVIDEBYZERO = ... # type: int
SHIFT_INVALID = ... # type: int
SHIFT_OVERFLOW = ... # type: int
SHIFT_UNDERFLOW = ... # type: int
UFUNC_BUFSIZE_DEFAULT = ... # type: int
UFUNC_PYVALS_NAME = ... # type: str
_UFUNC_API = ... # type: Any
_arg = ... # type: Any
_ones_like = ... # type: Any
absolute = ... # type: Any
add = ... # type: Any
arccos = ... # type: Any
arccosh = ... # type: Any
arcsin = ... # type: Any
arcsinh = ... # type: Any
arctan = ... # type: Any
arctan2 = ... # type: Any
arctanh = ... # type: Any
bitwise_and = ... # type: Any
bitwise_or = ... # type: Any
bitwise_xor = ... # type: Any
cbrt = ... # type: Any
ceil = ... # type: Any
conj = ... # type: Any
conjugate = ... # type: Any
copysign = ... # type: Any
cos = ... # type: Any
cosh = ... # type: Any
deg2rad = ... # type: Any
degrees = ... # type: Any
divide = ... # type: Any
e = ... # type: float
equal = ... # type: Any
euler_gamma = ... # type: float
exp = ... # type: Any
exp2 = ... # type: Any
expm1 = ... # type: Any
fabs = ... # type: Any
floor = ... # type: Any
floor_divide = ... # type: Any
fmax = ... # type: Any
fmin = ... # type: Any
fmod = ... # type: Any
frexp = ... # type: Any
greater = ... # type: Any
greater_equal = ... # type: Any
hypot = ... # type: Any
invert = ... # type: Any
isfinite = ... # type: Any
isinf = ... # type: Any
isnan = ... # type: Any
ldexp = ... # type: Any
left_shift = ... # type: Any
less = ... # type: Any
less_equal = ... # type: Any
log = ... # type: Any
log10 = ... # type: Any
log1p = ... # type: Any
log2 = ... # type: Any
logaddexp = ... # type: Any
logaddexp2 = ... # type: Any
logical_and = ... # type: Any
logical_not = ... # type: Any
logical_or = ... # type: Any
logical_xor = ... # type: Any
maximum = ... # type: Any
minimum = ... # type: Any
mod = ... # type: Any
modf = ... # type: Any
multiply = ... # type: Any
negative = ... # type: Any
nextafter = ... # type: Any
not_equal = ... # type: Any
pi = ... # type: float
power = ... # type: Any
rad2deg = ... # type: Any
radians = ... # type: Any
reciprocal = ... # type: Any
remainder = ... # type: Any
right_shift = ... # type: Any
rint = ... # type: Any
sign = ... # type: Any
signbit = ... # type: Any
sin = ... # type: Any
sinh = ... # type: Any
spacing = ... # type: Any
sqrt = ... # type: Any
square = ... # type: Any
subtract = ... # type: Any
tan = ... # type: Any
tanh = ... # type: Any
true_divide = ... # type: Any
trunc = ... # type: Any

def _add_newdoc_ufunc(*args, **kwargs): ...
def frompyfunc(func, nin, nout): ...
def geterrobj(): ...
def seterrobj(errobj): ...

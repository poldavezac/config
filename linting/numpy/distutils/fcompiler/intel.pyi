# Stubs for numpy.distutils.fcompiler.intel (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any
from numpy.distutils.fcompiler import FCompiler

compilers = ...  # type: Any

def intel_version_match(type): ...

class BaseIntelFCompiler(FCompiler):
    def update_executables(self): ...
    def runtime_library_dir_option(self, dir): ...

class IntelFCompiler(BaseIntelFCompiler):
    compiler_type = ...  # type: str
    compiler_aliases = ...  # type: Any
    description = ...  # type: str
    version_match = ...  # type: Any
    possible_executables = ...  # type: Any
    executables = ...  # type: Any
    pic_flags = ...  # type: Any
    module_dir_switch = ...  # type: str
    module_include_switch = ...  # type: str
    def get_flags_free(self): ...
    def get_flags(self): ...
    def get_flags_opt(self): ...
    def get_flags_arch(self): ...
    def get_flags_linker_so(self): ...

class IntelItaniumFCompiler(IntelFCompiler):
    compiler_type = ...  # type: str
    compiler_aliases = ...  # type: Any
    description = ...  # type: str
    version_match = ...  # type: Any
    possible_executables = ...  # type: Any
    executables = ...  # type: Any

class IntelEM64TFCompiler(IntelFCompiler):
    compiler_type = ...  # type: str
    compiler_aliases = ...  # type: Any
    description = ...  # type: str
    version_match = ...  # type: Any
    possible_executables = ...  # type: Any
    executables = ...  # type: Any
    def get_flags(self): ...
    def get_flags_opt(self): ...
    def get_flags_arch(self): ...

class IntelVisualFCompiler(BaseIntelFCompiler):
    compiler_type = ...  # type: str
    description = ...  # type: str
    version_match = ...  # type: Any
    def update_executables(self): ...
    ar_exe = ...  # type: str
    possible_executables = ...  # type: Any
    executables = ...  # type: Any
    compile_switch = ...  # type: str
    object_switch = ...  # type: str
    library_switch = ...  # type: str
    module_dir_switch = ...  # type: str
    module_include_switch = ...  # type: str
    def get_flags(self): ...
    def get_flags_free(self): ...
    def get_flags_debug(self): ...
    def get_flags_opt(self): ...
    def get_flags_arch(self): ...
    def runtime_library_dir_option(self, dir): ...

class IntelItaniumVisualFCompiler(IntelVisualFCompiler):
    compiler_type = ...  # type: str
    description = ...  # type: str
    version_match = ...  # type: Any
    possible_executables = ...  # type: Any
    ar_exe = ...  # type: Any
    executables = ...  # type: Any

class IntelEM64VisualFCompiler(IntelVisualFCompiler):
    compiler_type = ...  # type: str
    description = ...  # type: str
    version_match = ...  # type: Any
    def get_flags_arch(self): ...

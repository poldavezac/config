# Stubs for numpy.distutils.mingw32ccompiler (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional
import distutils.cygwinccompiler
from distutils.msvccompiler import get_build_version as get_build_msvc_version

class Mingw32CCompiler(distutils.cygwinccompiler.CygwinCCompiler):
    compiler_type = ...  # type: str
    gcc_version = ...  # type: Any
    linker = ...  # type: str
    compiler_cxx = ...  # type: Any
    def __init__(self, verbose: int = ..., dry_run: int = ..., force: int = ...) -> None: ...
    def link(self, target_desc, objects, output_filename, output_dir, libraries, library_dirs, runtime_library_dirs, export_symbols: Optional[Any] = ..., debug: int = ..., extra_preargs: Optional[Any] = ..., extra_postargs: Optional[Any] = ..., build_temp: Optional[Any] = ..., target_lang: Optional[Any] = ...): ...
    def object_filenames(self, source_filenames, strip_dir: int = ..., output_dir: str = ...): ...

def find_python_dll(): ...
def dump_table(dll): ...
def generate_def(dll, dfile): ...
def find_dll(dll_name): ...
def build_msvcr_library(debug: bool = ...): ...
def build_import_library(): ...

major = ...  # type: Any
minor = ...  # type: Any
rest = ...  # type: Any

def msvc_manifest_xml(maj, min): ...
def manifest_rc(name, type: str = ...): ...
def check_embedded_msvcr_match_linked(msver): ...
def configtest_name(config): ...
def manifest_name(config): ...
def rc_name(config): ...
def generate_manifest(config): ...

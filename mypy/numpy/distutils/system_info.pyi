# Stubs for numpy.distutils.system_info (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional
from ConfigParser import RawConfigParser as ConfigParser
from configparser import RawConfigParser as ConfigParser
from distutils.errors import DistutilsError
from numpy.distutils.command.config import config as cmd_config

platform_bits = ...  # type: Any

def libpaths(paths, bits): ...

default_lib_dirs = ...  # type: Any
default_runtime_dirs = ...  # type: Any
default_include_dirs = ...  # type: Any
default_src_dirs = ...  # type: Any
default_x11_lib_dirs = ...  # type: Any
default_x11_include_dirs = ...  # type: Any
globbed_x11_dir = ...  # type: Any
x11_so_dir = ...  # type: Any
tmp = ...  # type: Any
p = ...  # type: Any
triplet = ...  # type: Any
so_ext = ...  # type: Any

def get_standard_file(fname): ...
def get_info(name, notfound_action: int = ...): ...

class NotFoundError(DistutilsError): ...
class AtlasNotFoundError(NotFoundError): ...
class LapackNotFoundError(NotFoundError): ...
class LapackSrcNotFoundError(LapackNotFoundError): ...
class BlasNotFoundError(NotFoundError): ...
class BlasSrcNotFoundError(BlasNotFoundError): ...
class FFTWNotFoundError(NotFoundError): ...
class DJBFFTNotFoundError(NotFoundError): ...
class NumericNotFoundError(NotFoundError): ...
class X11NotFoundError(NotFoundError): ...
class UmfpackNotFoundError(NotFoundError): ...

class system_info:
    section = ...  # type: str
    dir_env_var = ...  # type: Any
    search_static_first = ...  # type: int
    verbosity = ...  # type: int
    saved_results = ...  # type: Any
    notfounderror = ...  # type: Any
    local_prefixes = ...  # type: Any
    cp = ...  # type: Any
    files = ...  # type: Any
    def __init__(self, default_lib_dirs: Any = ..., default_include_dirs: Any = ..., verbosity: int = ...) -> None: ...
    def parse_config_files(self): ...
    def calc_libraries_info(self): ...
    def set_info(self, **info): ...
    def has_info(self): ...
    def calc_extra_info(self): ...
    def get_info(self, notfound_action: int = ...): ...
    def get_paths(self, section, key): ...
    def get_lib_dirs(self, key: str = ...): ...
    def get_runtime_lib_dirs(self, key: str = ...): ...
    def get_include_dirs(self, key: str = ...): ...
    def get_src_dirs(self, key: str = ...): ...
    def get_libs(self, key, default): ...
    def get_libraries(self, key: str = ...): ...
    def library_extensions(self): ...
    def check_libs(self, lib_dirs, libs, opt_libs: Any = ...): ...
    def check_libs2(self, lib_dirs, libs, opt_libs: Any = ...): ...
    def combine_paths(self, *args): ...

class fft_opt_info(system_info):
    def calc_info(self): ...

class fftw_info(system_info):
    section = ...  # type: str
    dir_env_var = ...  # type: str
    notfounderror = ...  # type: Any
    ver_info = ...  # type: Any
    def calc_ver_info(self, ver_param): ...
    def calc_info(self): ...

class fftw2_info(fftw_info):
    section = ...  # type: str
    dir_env_var = ...  # type: str
    notfounderror = ...  # type: Any
    ver_info = ...  # type: Any

class fftw3_info(fftw_info):
    section = ...  # type: str
    dir_env_var = ...  # type: str
    notfounderror = ...  # type: Any
    ver_info = ...  # type: Any

class dfftw_info(fftw_info):
    section = ...  # type: str
    dir_env_var = ...  # type: str
    ver_info = ...  # type: Any

class sfftw_info(fftw_info):
    section = ...  # type: str
    dir_env_var = ...  # type: str
    ver_info = ...  # type: Any

class fftw_threads_info(fftw_info):
    section = ...  # type: str
    dir_env_var = ...  # type: str
    ver_info = ...  # type: Any

class dfftw_threads_info(fftw_info):
    section = ...  # type: str
    dir_env_var = ...  # type: str
    ver_info = ...  # type: Any

class sfftw_threads_info(fftw_info):
    section = ...  # type: str
    dir_env_var = ...  # type: str
    ver_info = ...  # type: Any

class djbfft_info(system_info):
    section = ...  # type: str
    dir_env_var = ...  # type: str
    notfounderror = ...  # type: Any
    def get_paths(self, section, key): ...
    def calc_info(self): ...

class mkl_info(system_info):
    section = ...  # type: str
    dir_env_var = ...  # type: str
    def get_mkl_rootdir(self): ...
    def __init__(self) -> None: ...
    def calc_info(self): ...

class lapack_mkl_info(mkl_info): ...
class blas_mkl_info(mkl_info): ...

class atlas_info(system_info):
    section = ...  # type: str
    dir_env_var = ...  # type: str
    notfounderror = ...  # type: Any
    def get_paths(self, section, key): ...
    def calc_info(self): ...

class atlas_blas_info(atlas_info):
    def calc_info(self): ...

class atlas_threads_info(atlas_info):
    dir_env_var = ...  # type: Any

class atlas_blas_threads_info(atlas_blas_info):
    dir_env_var = ...  # type: Any

class lapack_atlas_info(atlas_info): ...
class lapack_atlas_threads_info(atlas_threads_info): ...
class atlas_3_10_info(atlas_info): ...

class atlas_3_10_blas_info(atlas_3_10_info):
    def calc_info(self): ...

class atlas_3_10_threads_info(atlas_3_10_info):
    dir_env_var = ...  # type: Any

class atlas_3_10_blas_threads_info(atlas_3_10_blas_info):
    dir_env_var = ...  # type: Any

class lapack_atlas_3_10_info(atlas_3_10_info): ...
class lapack_atlas_3_10_threads_info(atlas_3_10_threads_info): ...

class lapack_info(system_info):
    section = ...  # type: str
    dir_env_var = ...  # type: str
    notfounderror = ...  # type: Any
    def calc_info(self): ...

class lapack_src_info(system_info):
    section = ...  # type: str
    dir_env_var = ...  # type: str
    notfounderror = ...  # type: Any
    def get_paths(self, section, key): ...
    def calc_info(self): ...

atlas_version_c_text = ...  # type: str

def get_atlas_version(**config): ...

class lapack_opt_info(system_info):
    notfounderror = ...  # type: Any
    def calc_info(self): ...

class blas_opt_info(system_info):
    notfounderror = ...  # type: Any
    def calc_info(self): ...

class blas_info(system_info):
    section = ...  # type: str
    dir_env_var = ...  # type: str
    notfounderror = ...  # type: Any
    def calc_info(self): ...
    def has_cblas(self, info): ...

class openblas_info(blas_info):
    section = ...  # type: str
    dir_env_var = ...  # type: str
    notfounderror = ...  # type: Any
    def check_embedded_lapack(self, info): ...
    def calc_info(self): ...

class openblas_lapack_info(openblas_info):
    section = ...  # type: str
    dir_env_var = ...  # type: str
    notfounderror = ...  # type: Any
    def check_embedded_lapack(self, info): ...

class blas_src_info(system_info):
    section = ...  # type: str
    dir_env_var = ...  # type: str
    notfounderror = ...  # type: Any
    def get_paths(self, section, key): ...
    def calc_info(self): ...

class x11_info(system_info):
    section = ...  # type: str
    notfounderror = ...  # type: Any
    def __init__(self) -> None: ...
    def calc_info(self): ...

class _numpy_info(system_info):
    section = ...  # type: str
    modulename = ...  # type: str
    notfounderror = ...  # type: Any
    def __init__(self) -> None: ...
    def calc_info(self): ...

class numarray_info(_numpy_info):
    section = ...  # type: str
    modulename = ...  # type: str

class Numeric_info(_numpy_info):
    section = ...  # type: str
    modulename = ...  # type: str

class numpy_info(_numpy_info):
    section = ...  # type: str
    modulename = ...  # type: str

class numerix_info(system_info):
    section = ...  # type: str
    def calc_info(self): ...

class f2py_info(system_info):
    def calc_info(self): ...

class boost_python_info(system_info):
    section = ...  # type: str
    dir_env_var = ...  # type: str
    def get_paths(self, section, key): ...
    def calc_info(self): ...

class agg2_info(system_info):
    section = ...  # type: str
    dir_env_var = ...  # type: str
    def get_paths(self, section, key): ...
    def calc_info(self): ...

class _pkg_config_info(system_info):
    section = ...  # type: Any
    config_env_var = ...  # type: str
    default_config_exe = ...  # type: str
    append_config_exe = ...  # type: str
    version_macro_name = ...  # type: Any
    release_macro_name = ...  # type: Any
    version_flag = ...  # type: str
    cflags_flag = ...  # type: str
    def get_config_exe(self): ...
    def get_config_output(self, config_exe, option): ...
    def calc_info(self): ...

class wx_info(_pkg_config_info):
    section = ...  # type: str
    config_env_var = ...  # type: str
    default_config_exe = ...  # type: str
    append_config_exe = ...  # type: str
    version_macro_name = ...  # type: str
    release_macro_name = ...  # type: str
    version_flag = ...  # type: str
    cflags_flag = ...  # type: str

class gdk_pixbuf_xlib_2_info(_pkg_config_info):
    section = ...  # type: str
    append_config_exe = ...  # type: str
    version_macro_name = ...  # type: str

class gdk_pixbuf_2_info(_pkg_config_info):
    section = ...  # type: str
    append_config_exe = ...  # type: str
    version_macro_name = ...  # type: str

class gdk_x11_2_info(_pkg_config_info):
    section = ...  # type: str
    append_config_exe = ...  # type: str
    version_macro_name = ...  # type: str

class gdk_2_info(_pkg_config_info):
    section = ...  # type: str
    append_config_exe = ...  # type: str
    version_macro_name = ...  # type: str

class gdk_info(_pkg_config_info):
    section = ...  # type: str
    append_config_exe = ...  # type: str
    version_macro_name = ...  # type: str

class gtkp_x11_2_info(_pkg_config_info):
    section = ...  # type: str
    append_config_exe = ...  # type: str
    version_macro_name = ...  # type: str

class gtkp_2_info(_pkg_config_info):
    section = ...  # type: str
    append_config_exe = ...  # type: str
    version_macro_name = ...  # type: str

class xft_info(_pkg_config_info):
    section = ...  # type: str
    append_config_exe = ...  # type: str
    version_macro_name = ...  # type: str

class freetype2_info(_pkg_config_info):
    section = ...  # type: str
    append_config_exe = ...  # type: str
    version_macro_name = ...  # type: str

class amd_info(system_info):
    section = ...  # type: str
    dir_env_var = ...  # type: str
    def calc_info(self): ...

class umfpack_info(system_info):
    section = ...  # type: str
    dir_env_var = ...  # type: str
    notfounderror = ...  # type: Any
    def calc_info(self): ...

def combine_paths(*args, **kws): ...

language_map = ...  # type: Any
inv_language_map = ...  # type: Any

def dict_append(d, **kws): ...
def parseCmdLine(argv: Any = ...): ...
def show_all(argv: Optional[Any] = ...): ...

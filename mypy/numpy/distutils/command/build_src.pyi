# Stubs for numpy.distutils.command.build_src (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any
import build_ext
from numpy.distutils.from_template import process_file as process_f_file
from numpy.distutils.conv_template import process_file as process_c_file

def subst_vars(target, source, d): ...

class build_src(build_ext.build_ext):
    description = ...  # type: str
    user_options = ...  # type: Any
    boolean_options = ...  # type: Any
    help_options = ...  # type: Any
    extensions = ...  # type: Any
    package = ...  # type: Any
    py_modules = ...  # type: Any
    py_modules_dict = ...  # type: Any
    build_src = ...  # type: Any
    build_lib = ...  # type: Any
    build_base = ...  # type: Any
    force = ...  # type: Any
    inplace = ...  # type: Any
    package_dir = ...  # type: Any
    f2pyflags = ...  # type: Any
    f2py_opts = ...  # type: Any
    swigflags = ...  # type: Any
    swig_opts = ...  # type: Any
    swig_cpp = ...  # type: Any
    swig = ...  # type: Any
    def initialize_options(self): ...
    libraries = ...  # type: Any
    data_files = ...  # type: Any
    def finalize_options(self): ...
    def run(self): ...
    get_package_dir = ...  # type: Any
    def build_sources(self): ...
    def build_data_files_sources(self): ...
    def build_npy_pkg_config(self): ...
    def build_py_modules_sources(self): ...
    def build_library_sources(self, lib_name, build_info): ...
    ext_target_dir = ...  # type: Any
    def build_extension_sources(self, ext): ...
    def generate_sources(self, sources, extension): ...
    def filter_py_files(self, sources): ...
    def filter_h_files(self, sources): ...
    def filter_files(self, sources, exts: Any = ...): ...
    def template_sources(self, sources, extension): ...
    def pyrex_sources(self, sources, extension): ...
    def generate_a_pyrex_source(self, base, ext_name, source, extension): ...
    def f2py_sources(self, sources, extension): ...
    def swig_sources(self, sources, extension): ...

def get_swig_target(source): ...
def get_swig_modulename(source): ...
def get_f2py_modulename(source): ...
